<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scoder.vin.web.api.mapper.basic.NoteMapper">
  <resultMap id="BaseResultMap" type="com.scoder.vin.web.api.domain.basic.Note">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="notebook_id" jdbcType="BIGINT" property="notebookId" />
    <result column="note_id" jdbcType="BIGINT" property="noteId" />
    <result column="draft_version" jdbcType="INTEGER" property="draftVersion" />
    <result column="publish_version" jdbcType="INTEGER" property="publishVersion" />
    <result column="is_comment" jdbcType="BIT" property="isComment" />
    <result column="is_show" jdbcType="BIT" property="isShow" />
    <result column="is_public" jdbcType="BIT" property="isPublic" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, notebook_id, note_id, draft_version, publish_version, is_comment, is_show, is_public, 
    status, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.scoder.vin.web.api.domain.basic.NoteExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from v_note
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from v_note
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from v_note
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.scoder.vin.web.api.domain.basic.NoteExample">
    delete from v_note
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.scoder.vin.web.api.domain.basic.Note">
    insert into v_note (id, notebook_id, note_id, 
      draft_version, publish_version, is_comment, 
      is_show, is_public, status, create_time, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{notebookId,jdbcType=BIGINT}, #{noteId,jdbcType=BIGINT}, 
      #{draftVersion,jdbcType=INTEGER}, #{publishVersion,jdbcType=INTEGER}, #{isComment,jdbcType=BIT}, 
      #{isShow,jdbcType=BIT}, #{isPublic,jdbcType=BIT}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.scoder.vin.web.api.domain.basic.Note">
    insert into v_note
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="notebookId != null">
        notebook_id,
      </if>
      <if test="noteId != null">
        note_id,
      </if>
      <if test="draftVersion != null">
        draft_version,
      </if>
      <if test="publishVersion != null">
        publish_version,
      </if>
      <if test="isComment != null">
        is_comment,
      </if>
      <if test="isShow != null">
        is_show,
      </if>
      <if test="isPublic != null">
        is_public,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="notebookId != null">
        #{notebookId,jdbcType=BIGINT},
      </if>
      <if test="noteId != null">
        #{noteId,jdbcType=BIGINT},
      </if>
      <if test="draftVersion != null">
        #{draftVersion,jdbcType=INTEGER},
      </if>
      <if test="publishVersion != null">
        #{publishVersion,jdbcType=INTEGER},
      </if>
      <if test="isComment != null">
        #{isComment,jdbcType=BIT},
      </if>
      <if test="isShow != null">
        #{isShow,jdbcType=BIT},
      </if>
      <if test="isPublic != null">
        #{isPublic,jdbcType=BIT},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.scoder.vin.web.api.domain.basic.NoteExample" resultType="java.lang.Long">
    select count(*) from v_note
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update v_note
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.notebookId != null">
        notebook_id = #{record.notebookId,jdbcType=BIGINT},
      </if>
      <if test="record.noteId != null">
        note_id = #{record.noteId,jdbcType=BIGINT},
      </if>
      <if test="record.draftVersion != null">
        draft_version = #{record.draftVersion,jdbcType=INTEGER},
      </if>
      <if test="record.publishVersion != null">
        publish_version = #{record.publishVersion,jdbcType=INTEGER},
      </if>
      <if test="record.isComment != null">
        is_comment = #{record.isComment,jdbcType=BIT},
      </if>
      <if test="record.isShow != null">
        is_show = #{record.isShow,jdbcType=BIT},
      </if>
      <if test="record.isPublic != null">
        is_public = #{record.isPublic,jdbcType=BIT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update v_note
    set id = #{record.id,jdbcType=BIGINT},
      notebook_id = #{record.notebookId,jdbcType=BIGINT},
      note_id = #{record.noteId,jdbcType=BIGINT},
      draft_version = #{record.draftVersion,jdbcType=INTEGER},
      publish_version = #{record.publishVersion,jdbcType=INTEGER},
      is_comment = #{record.isComment,jdbcType=BIT},
      is_show = #{record.isShow,jdbcType=BIT},
      is_public = #{record.isPublic,jdbcType=BIT},
      status = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.scoder.vin.web.api.domain.basic.Note">
    update v_note
    <set>
      <if test="notebookId != null">
        notebook_id = #{notebookId,jdbcType=BIGINT},
      </if>
      <if test="noteId != null">
        note_id = #{noteId,jdbcType=BIGINT},
      </if>
      <if test="draftVersion != null">
        draft_version = #{draftVersion,jdbcType=INTEGER},
      </if>
      <if test="publishVersion != null">
        publish_version = #{publishVersion,jdbcType=INTEGER},
      </if>
      <if test="isComment != null">
        is_comment = #{isComment,jdbcType=BIT},
      </if>
      <if test="isShow != null">
        is_show = #{isShow,jdbcType=BIT},
      </if>
      <if test="isPublic != null">
        is_public = #{isPublic,jdbcType=BIT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.scoder.vin.web.api.domain.basic.Note">
    update v_note
    set notebook_id = #{notebookId,jdbcType=BIGINT},
      note_id = #{noteId,jdbcType=BIGINT},
      draft_version = #{draftVersion,jdbcType=INTEGER},
      publish_version = #{publishVersion,jdbcType=INTEGER},
      is_comment = #{isComment,jdbcType=BIT},
      is_show = #{isShow,jdbcType=BIT},
      is_public = #{isPublic,jdbcType=BIT},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>